

.. _sphx_glr_auto_examples_arima_example_persisting_a_model.py:


=========================
Persisting an ARIMA model
=========================


This example demonstrates how we can persist an ARIMA model to disk after
fitting it. It can then be loaded back up and used to generate forecasts.

.. raw:: html

   <br/>





.. rst-class:: sphx-glr-script-out

 Out::

    Predictions: array([21966.62226474, 25983.68044493, 30225.27915204, 35417.0800559 ,
           13011.28961   , 19639.38971872, 21506.54269503, 23674.31781113,
           21685.72925843, 23669.78332282, 26955.32080777, 22755.18944638,
           19808.06053342, 23578.73237314, 27845.8133379 , 32923.82740347,
           10475.59297099, 17024.702561  , 18831.58657204, 20929.50230368,
           18875.9672142 , 20792.55805594, 24011.92153138, 19744.95574015,
           16731.33070837, 20435.33312396, 24635.83344304, 29647.22138474,
            7132.38412534, 13614.87895418, 15355.15431756, 17386.45826979,
           15266.31300519, 17116.29285   , 20269.04574949, 15935.46916665,
           12855.23345374, 16492.62513161, 20626.51474196, 25571.29196007,
            2989.84398469,  9405.72809366, 11079.39273916, 13044.08597249,
           10857.32998951, 12640.69911568, 15726.84129666, 11326.65399525,
            8179.80756379, 11750.5885231 , 15817.86741489])




|


.. code-block:: python

    print(__doc__)

    # Author: Taylor Smith <taylor.smith@alkaline-ml.com>

    import pmdarima as pm
    from pmdarima import model_selection
    import joblib  # for persistence
    import os

    # #############################################################################
    # Load the data and split it into separate pieces
    y = pm.datasets.load_wineind()
    train, test = model_selection.train_test_split(y, train_size=125)

    # Fit an ARIMA
    arima = pm.ARIMA(order=(1, 1, 2), seasonal_order=(0, 1, 1, 12))
    arima.fit(y)

    # #############################################################################
    # Persist a model and create predictions after re-loading it
    pickle_tgt = "arima.pkl"
    try:
        # Pickle it
        joblib.dump(arima, pickle_tgt, compress=3)

        # Load the model up, create predictions
        arima_loaded = joblib.load(pickle_tgt)
        preds = arima_loaded.predict(n_periods=test.shape[0])
        print("Predictions: %r" % preds)

    finally:
        # Remove the pickle file at the end of this example
        try:
            os.unlink(pickle_tgt)
        except OSError:
            pass

**Total running time of the script:** ( 0 minutes  2.799 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: example_persisting_a_model.py <example_persisting_a_model.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: example_persisting_a_model.ipynb <example_persisting_a_model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
